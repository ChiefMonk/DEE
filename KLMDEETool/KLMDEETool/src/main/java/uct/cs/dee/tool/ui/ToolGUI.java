/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uct.cs.dee.tool.ui;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import uct.cs.dee.tool.models.*;
import uct.cs.dee.tool.utils.*;
import org.tweetyproject.logics.pl.syntax.PlBeliefSet;
import org.tweetyproject.logics.pl.syntax.PlFormula;

import com.formdev.flatlaf.FlatLightLaf;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.text.BadLocationException;
import uct.cs.dee.tool.impl.*;
import uct.cs.dee.tool.services.*;

/**
 *
 * @author Chipo Hamayobe (chipo@cs.uct.ac.za)
 */
public class ToolGUI extends javax.swing.JFrame {       
    private IKnowledgeBaseService _knowledgeBaseService;
    private IEntailmentService _entailmentService;
    
    /**
     * Creates new form ToolGUI
     */
    public ToolGUI() {
        initComponents();
        this.setResizable(true);
          
           this.setDefaultCloseOperation(javax.swing.JFrame.DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosing(java.awt.event.WindowEvent windowEvent) {
            ButtonExitApplicationActionPerformed(null);
        }});
        
        _knowledgeBaseService = new DefeasibleKnowledgeBaseService(); 
        _entailmentService = new DefeasibleEntailmentService();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        PanelMain = new javax.swing.JPanel();
        PanelHeader = new javax.swing.JPanel();
        LabelHeaderDee = new javax.swing.JLabel();
        LabelHeaderUct = new javax.swing.JLabel();
        PanelInputs = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaInputKB = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        textFieldInputQuery = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ButtonLoadKB = new javax.swing.JButton();
        ButtonVerifyKB = new javax.swing.JButton();
        ButtonVerifyQuery = new javax.swing.JButton();
        ButtonVerifyAndComputeAll = new javax.swing.JButton();
        PanelOutputKB = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaOutputKB = new javax.swing.JTextArea();
        PanelOutputBaseRanking = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textAreaOutputBaseRanking = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        textAreaOutputDiscardedRanks = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        PanelOutputEntailAndJustify = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        textAreaOutputEntailment = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        textAreaOutputJustification = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        PanelOutputExplanations = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        textAreaOutputExplanation = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ButtonClearInputs = new javax.swing.JButton();
        ButtonClearOutputs = new javax.swing.JButton();
        ButtonExitApplication = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelMain.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        PanelHeader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelHeader.setAlignmentX(1.0F);
        PanelHeader.setAlignmentY(1.0F);
        PanelHeader.setPreferredSize(new java.awt.Dimension(700, 54));

        LabelHeaderDee.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        LabelHeaderDee.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelHeaderDee.setText("~ KLMDEETool - The KLM Defeasible Entailment and Explanations Tool ~");
        LabelHeaderDee.setAlignmentY(0.0F);

        LabelHeaderUct.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        LabelHeaderUct.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelHeaderUct.setText("University of Cape Town");

        javax.swing.GroupLayout PanelHeaderLayout = new javax.swing.GroupLayout(PanelHeader);
        PanelHeader.setLayout(PanelHeaderLayout);
        PanelHeaderLayout.setHorizontalGroup(
            PanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHeaderLayout.createSequentialGroup()
                .addGap(323, 323, 323)
                .addComponent(LabelHeaderDee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(323, 323, 323))
            .addGroup(PanelHeaderLayout.createSequentialGroup()
                .addGap(451, 451, 451)
                .addComponent(LabelHeaderUct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(469, 469, 469))
        );
        PanelHeaderLayout.setVerticalGroup(
            PanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHeaderLayout.createSequentialGroup()
                .addComponent(LabelHeaderDee)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LabelHeaderUct)
                .addContainerGap())
        );

        PanelInputs.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        PanelInputs.setAlignmentX(1.0F);
        PanelInputs.setAlignmentY(1.0F);

        textAreaInputKB.setColumns(20);
        textAreaInputKB.setRows(11);
        textAreaInputKB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textAreaInputKBKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(textAreaInputKB);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Define the defeasible Knowledge Base, K :");

        textFieldInputQuery.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Enter the defeasible Query, α :");

        ButtonLoadKB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ButtonLoadKB.setText("Load Knowledge Base, K, from a File");
        ButtonLoadKB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLoadKBActionPerformed(evt);
            }
        });

        ButtonVerifyKB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ButtonVerifyKB.setText("Verify Knowledge Base, K");
        ButtonVerifyKB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonVerifyKBActionPerformed(evt);
            }
        });

        ButtonVerifyQuery.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ButtonVerifyQuery.setText("Verify Query, α");
        ButtonVerifyQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonVerifyQueryActionPerformed(evt);
            }
        });

        ButtonVerifyAndComputeAll.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ButtonVerifyAndComputeAll.setText("Verify and Compute Entailment and Explanations");
        ButtonVerifyAndComputeAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonVerifyAndComputeAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelInputsLayout = new javax.swing.GroupLayout(PanelInputs);
        PanelInputs.setLayout(PanelInputsLayout);
        PanelInputsLayout.setHorizontalGroup(
            PanelInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInputsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PanelInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ButtonLoadKB, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldInputQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanelInputsLayout.createSequentialGroup()
                        .addComponent(ButtonVerifyKB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonVerifyQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ButtonVerifyAndComputeAll, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelInputsLayout.setVerticalGroup(
            PanelInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInputsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PanelInputsLayout.createSequentialGroup()
                        .addComponent(textFieldInputQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonLoadKB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PanelInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonVerifyKB)
                            .addComponent(ButtonVerifyQuery))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonVerifyAndComputeAll, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelOutputKB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Verified Knowledge Base, K :");

        textAreaOutputKB.setEditable(false);
        textAreaOutputKB.setColumns(20);
        textAreaOutputKB.setRows(10);
        jScrollPane2.setViewportView(textAreaOutputKB);

        javax.swing.GroupLayout PanelOutputKBLayout = new javax.swing.GroupLayout(PanelOutputKB);
        PanelOutputKB.setLayout(PanelOutputKBLayout);
        PanelOutputKBLayout.setHorizontalGroup(
            PanelOutputKBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelOutputKBLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelOutputKBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelOutputKBLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE))
                .addContainerGap())
        );
        PanelOutputKBLayout.setVerticalGroup(
            PanelOutputKBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelOutputKBLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        PanelOutputBaseRanking.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        textAreaOutputBaseRanking.setEditable(false);
        textAreaOutputBaseRanking.setColumns(20);
        textAreaOutputBaseRanking.setRows(5);
        jScrollPane3.setViewportView(textAreaOutputBaseRanking);

        textAreaOutputDiscardedRanks.setEditable(false);
        textAreaOutputDiscardedRanks.setColumns(20);
        textAreaOutputDiscardedRanks.setRows(5);
        jScrollPane4.setViewportView(textAreaOutputDiscardedRanks);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("BaseRanking of Statements :");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Rational Closure Discarded Ranks of Statements :");

        javax.swing.GroupLayout PanelOutputBaseRankingLayout = new javax.swing.GroupLayout(PanelOutputBaseRanking);
        PanelOutputBaseRanking.setLayout(PanelOutputBaseRankingLayout);
        PanelOutputBaseRankingLayout.setHorizontalGroup(
            PanelOutputBaseRankingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelOutputBaseRankingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelOutputBaseRankingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelOutputBaseRankingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelOutputBaseRankingLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );
        PanelOutputBaseRankingLayout.setVerticalGroup(
            PanelOutputBaseRankingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelOutputBaseRankingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelOutputBaseRankingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelOutputBaseRankingLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4))
                    .addGroup(PanelOutputBaseRankingLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );

        PanelOutputEntailAndJustify.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        textAreaOutputEntailment.setEditable(false);
        textAreaOutputEntailment.setColumns(20);
        textAreaOutputEntailment.setRows(3);
        jScrollPane5.setViewportView(textAreaOutputEntailment);

        textAreaOutputJustification.setEditable(false);
        textAreaOutputJustification.setColumns(20);
        textAreaOutputJustification.setRows(3);
        jScrollPane6.setViewportView(textAreaOutputJustification);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Entailment (does K entail α?) :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Justification (minimal subset of K that entails α) :");

        javax.swing.GroupLayout PanelOutputEntailAndJustifyLayout = new javax.swing.GroupLayout(PanelOutputEntailAndJustify);
        PanelOutputEntailAndJustify.setLayout(PanelOutputEntailAndJustifyLayout);
        PanelOutputEntailAndJustifyLayout.setHorizontalGroup(
            PanelOutputEntailAndJustifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelOutputEntailAndJustifyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelOutputEntailAndJustifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelOutputEntailAndJustifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelOutputEntailAndJustifyLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane6))
                .addContainerGap())
        );
        PanelOutputEntailAndJustifyLayout.setVerticalGroup(
            PanelOutputEntailAndJustifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelOutputEntailAndJustifyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelOutputEntailAndJustifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelOutputEntailAndJustifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(jScrollPane6))
                .addContainerGap())
        );

        PanelOutputExplanations.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        textAreaOutputExplanation.setEditable(false);
        textAreaOutputExplanation.setColumns(20);
        textAreaOutputExplanation.setRows(5);
        jScrollPane7.setViewportView(textAreaOutputExplanation);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Explanation (why and how K entails α?) :");

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        ButtonClearInputs.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ButtonClearInputs.setText("Clear all Inputs");
        ButtonClearInputs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClearInputsActionPerformed(evt);
            }
        });

        ButtonClearOutputs.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ButtonClearOutputs.setText("Clear all Outputs");
        ButtonClearOutputs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClearOutputsActionPerformed(evt);
            }
        });

        ButtonExitApplication.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ButtonExitApplication.setText("Exit Application");
        ButtonExitApplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonExitApplicationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonClearInputs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonClearOutputs, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ButtonExitApplication, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(ButtonClearInputs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonClearOutputs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonExitApplication)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelOutputExplanationsLayout = new javax.swing.GroupLayout(PanelOutputExplanations);
        PanelOutputExplanations.setLayout(PanelOutputExplanationsLayout);
        PanelOutputExplanationsLayout.setHorizontalGroup(
            PanelOutputExplanationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelOutputExplanationsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelOutputExplanationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelOutputExplanationsLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane7))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelOutputExplanationsLayout.setVerticalGroup(
            PanelOutputExplanationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelOutputExplanationsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelOutputExplanationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelOutputExplanationsLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7)))
                .addContainerGap())
        );

        javax.swing.GroupLayout PanelMainLayout = new javax.swing.GroupLayout(PanelMain);
        PanelMain.setLayout(PanelMainLayout);
        PanelMainLayout.setHorizontalGroup(
            PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelOutputEntailAndJustify, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelOutputBaseRanking, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 1233, Short.MAX_VALUE)
                    .addGroup(PanelMainLayout.createSequentialGroup()
                        .addComponent(PanelInputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PanelOutputKB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(PanelOutputExplanations, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        PanelMainLayout.setVerticalGroup(
            PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PanelInputs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelOutputKB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelOutputBaseRanking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelOutputEntailAndJustify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelOutputExplanations, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="EVENT HANDLERS">
    private void ButtonLoadKBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonLoadKBActionPerformed
       
        try 
        {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new java.io.File("."));
            fileChooser.setDialogTitle("Please select a file with the Knowledge Base");
            
            File kbFile = null;
            
            if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){               
                kbFile = fileChooser.getSelectedFile();  
                clearInputsAndOutputsData();
            }
            else {
                throw new Exception("Invalid Knowledge Base selection. \nPlease correct and try again");                   
            }
                             
            Scanner scanner = new Scanner(kbFile);

            while (scanner.hasNextLine())
            {
                String line = scanner.nextLine();

                 if (line == null || line.isEmpty())
                        continue;

                textAreaInputKB.append(line.trim()+ "\n");     
            }       
        } 
        catch (FileNotFoundException ex)
        {
            showErrorPopupMessage(ErrorInputKnowledgeBase, ex);
        }  
        catch (Exception ex)
        {
            showErrorPopupMessage(ErrorInputKnowledgeBase, ex);
        }  
    }//GEN-LAST:event_ButtonLoadKBActionPerformed

    private void ButtonVerifyKBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonVerifyKBActionPerformed
       try
        {
            ButtonClearOutputsActionPerformed(evt);           
                    
            String inputKb = textAreaInputKB.getText();             
            if (inputKb == null || inputKb.isEmpty())
                throw new Exception("Please define a valid defeasible knowledge base, K."); 
            
            List<String> kbStatementList = new ArrayList<String>();             
                       
            for (String line : inputKb.split("\\n")){                 
                if (line == null || line.isEmpty())
                    continue;
                
                kbStatementList.add(line.trim());              
             }
            
              ValidationResult<List<String>> validKb = _knowledgeBaseService.validateKnowledgeBase(kbStatementList);
            
            if(validKb.isValid()) {
                setOutputKB("");        
                for (String formula : validKb.getData()) {          
                    appendOutputKB(formula);                           
                }    
            }
            else {
                showErrorPopupMessage(ErrorInputKnowledgeBase, validKb.getMessage());
            }
        }
        catch(Exception ex)
        {
            showErrorPopupMessage(ErrorInputKnowledgeBase, ex);
        }
    }//GEN-LAST:event_ButtonVerifyKBActionPerformed

    private void ButtonVerifyQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonVerifyQueryActionPerformed
       
        ValidationResult<String> validQuery = _knowledgeBaseService.validateQuery( textFieldInputQuery.getText());
        
        if(!validQuery.isValid())
            showErrorPopupMessage(ErrorInputQuery, validQuery.getMessage());
    }//GEN-LAST:event_ButtonVerifyQueryActionPerformed

    private void ButtonVerifyAndComputeAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonVerifyAndComputeAllActionPerformed
        
        ButtonClearOutputsActionPerformed(evt);           
        
        ButtonVerifyKBActionPerformed(evt);
        ButtonVerifyQueryActionPerformed(evt);
        
        if(_knowledgeBaseService.getKnowledgeBase() == null || _knowledgeBaseService.getQuery() == null)
            return;
        
        try 
        {
            computeDefeasibleExplanation(_knowledgeBaseService.getKnowledgeBase(), _knowledgeBaseService.getQuery());
        } 
        catch (Exception ex) 
        {
             showErrorPopupMessage("Defeasible Entailment and Justification Computation Error", ex);           
        }    
    }//GEN-LAST:event_ButtonVerifyAndComputeAllActionPerformed

    private void ButtonClearInputsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonClearInputsActionPerformed
        textAreaInputKB.setText("");
        textFieldInputQuery.setText("");
    }//GEN-LAST:event_ButtonClearInputsActionPerformed

    private void ButtonClearOutputsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonClearOutputsActionPerformed
        setOutputKB("");
        setOutputBaseRanking("");
        setOutputDiscardedRanks("");
        setOutputEntailment("");
        setOutputJustification("");
        setOutputExplanation("");      
    }//GEN-LAST:event_ButtonClearOutputsActionPerformed

    private void ButtonExitApplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonExitApplicationActionPerformed
        int reply = JOptionPane.showConfirmDialog(this, "Are you sure you would like to Exit the Application", "Exit the Application", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
             System.exit(0);
        }    
    }//GEN-LAST:event_ButtonExitApplicationActionPerformed

    private void textAreaInputKBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textAreaInputKBKeyPressed
        trunkTextArea(textAreaInputKB);
    }//GEN-LAST:event_textAreaInputKBKeyPressed

     // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="INPUT and OUTPUT DATA">
    private void clearInputsAndOutputsData() {
        ButtonClearInputsActionPerformed(null);
        ButtonClearOutputsActionPerformed(null);
    }
     
    private void setOutputKB(String text) {
        textAreaOutputKB.setText(text);
    }
    
     private void appendOutputKB(String text) {
        if (text == null || text.isEmpty())
            return;
        
        textAreaOutputKB.append(text + "\n");
    }
    
    private void setOutputBaseRanking(String text) {
        textAreaOutputBaseRanking.setText(text);
    }
    
    private void appendOutputBaseRanking(String text) {
        if (text == null || text.isEmpty())
            return;        
        textAreaOutputBaseRanking.append(text + "\n");
    }
    
    private void setOutputDiscardedRanks(String text) {
        textAreaOutputDiscardedRanks.setText(text);
       
    }
    
    private void appendOutputDiscardedRanks(String text) {
        if (text == null || text.isEmpty())
            return;
        textAreaOutputBaseRanking.append(text + "\n");
    }
    
    private void setOutputEntailment(String text) {
        textAreaOutputEntailment.setText(text);
       
    }
    
    private void appendOutputEntailment(String text) {
        if (text == null || text.isEmpty())
            return;
        textAreaOutputEntailment.append(text + "\n");
    }
    
    private void setOutputJustification(String text) {
        textAreaOutputJustification.setText(text);
       
    }
    
    private void appendOutputJustification(String text) {
        if (text == null || text.isEmpty())
            return;
        textAreaOutputJustification.append(text + "\n");
    }
    
    private void setOutputExplanation(String text) {
        textAreaOutputExplanation.setText(text);       
    }
    
    private void appendOutputExplanation(String text) {
        if (text == null || text.isEmpty())
            return;
        textAreaOutputExplanation.append(text + "\n");
    }
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="ERROR MESSAGES">
    private final String ErrorInputKnowledgeBase = "Input Defeasible Knowledge Base";
    private final String ErrorInputQuery = "Input Defeasible Query";
    private final String ErrorDefaultTitle = "Invalid Error Occurred";
    
    private void showErrorPopupMessage(String title, String errorMessage) {
         if (errorMessage == null || errorMessage.isEmpty())
             return;
         
         if (title == null || title.isEmpty())
             title = ErrorDefaultTitle;
         
         JOptionPane.showMessageDialog(this, errorMessage, title, JOptionPane.ERROR_MESSAGE);
    }
        
    private void showErrorPopupMessage(String errorMessage) {       
        showErrorPopupMessage(ErrorDefaultTitle, errorMessage);
    }
    
    private void showErrorPopupMessage(String title, Exception exception) {
         if (exception == null)
             return;
         
         if (title == null || title.isEmpty())
             title = ErrorDefaultTitle;
         
        Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, title, exception);
        showErrorPopupMessage(title,exception.getMessage());
    }
    
    private void showErrorPopupMessage(Exception exception) {       
        showErrorPopupMessage(ErrorDefaultTitle, exception);
    }
    
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="PRIVATE METHODS">         
    private void computeDefeasibleExplanation(PlBeliefSet knowledgeBase, PlFormula query) throws Exception
    {
        appendOutputExplanation("Knowledge Base, K = " + knowledgeBase.toString());
        appendOutputExplanation("Query, α = " +  query.toString()); 
        
        List<PlFormula> classicalFormulas = Utils.getClassicalFormulas(knowledgeBase);
        
        RationalClosureResults rationalClosure = _entailmentService.computeRationalClosure(knowledgeBase, query);
               
        setOutputBaseRanking(rationalClosure.getMinimalRanking().toString());
        
        System.out.println(rationalClosure);
        appendOutputExplanation(String.format("Number of ranks discarded: %s", rationalClosure.getRanksRemoved()));
         
        
        if (!rationalClosure.entailmentsHolds())
        {
            textAreaOutputEntailment.append("The entailment does not hold." + "\n");
            textAreaOutputEntailment.append("The remaining kb formulas do not entail the query: \n" + rationalClosure.getRemainingFormulas() + "\n");
            return;
        }
        
        textAreaOutputEntailment.append("Yes, the input query, " +  query.toString() + ", is entailed by the knowledge base.");
        
        int ranksRemoved = rationalClosure.getRanksRemoved();
       
        if (ranksRemoved == 0)
        {
            Node rootNode = ClassicJust.computeJustification(Utils.materialise(knowledgeBase), Utils.materialise(query));
            List<List<PlFormula>> justifiactions = rootNode.getAllJustifications();
            List<List<PlFormula>> dematerialisedJustification = new ArrayList<List<PlFormula>>();
            
            for (List<PlFormula> justification : justifiactions)
            {
                dematerialisedJustification.add(Utils.dematerialise(justification, classicalFormulas));
            }
            
            textAreaOutputJustification.append("Justification, J = { ");
            int justSize = dematerialisedJustification.size();
            int justCounter = 0;
            for (List<PlFormula> newJust : dematerialisedJustification)
            {
                textAreaOutputJustification.append(Utils.printJustificationAsCSV(newJust));
                justCounter++;
                if(justCounter < justSize)
                    textAreaOutputJustification.append(", ");
            }
            textAreaOutputJustification.append(" }");
            return;
        }
        
        int i = 0;
       
        
        while (i < ranksRemoved)
        {
            knowledgeBase = Utils.remove(knowledgeBase, rationalClosure.getMinimalRanking().getFinitlyRankedFormula(i));
            textAreaOutputJustification.append("Removed rank " + i + ":\n");
            textAreaOutputJustification.append(knowledgeBase.toString()+ "\n");
            i ++;
        }
        
        Node rootNode = ClassicJust.computeJustification(Utils.materialise(knowledgeBase), Utils.materialise(query));
        List<List<PlFormula>> justifiactions = rootNode.getAllJustifications();
        List<List<PlFormula>> dematerialisedJustification = new ArrayList<List<PlFormula>>();
        for (List<PlFormula> justification : justifiactions)
        {
            dematerialisedJustification.add(Utils.dematerialise(justification, classicalFormulas));
        }
        
        textAreaOutputJustification.append("Final Justification:\n");
        for (List<PlFormula> newJust : dematerialisedJustification)
        {
            textAreaOutputJustification.append(Utils.printJustificationAsCSV(newJust)+ "\n");
        }
        
    }
    
    final int SCROLL_BUFFER_SIZE = 10;
    private void trunkTextArea(javax.swing.JTextArea txtWin)
    {
        int numLinesToTrunk = txtWin.getLineCount() - SCROLL_BUFFER_SIZE;
        if(numLinesToTrunk > 0)
        {
            try
            {
                int posOfLastLineToTrunk = txtWin.getLineEndOffset(numLinesToTrunk - 1);
                txtWin.replaceRange("",0,posOfLastLineToTrunk);
            }
            catch (BadLocationException ex) {             
            }
        }
    }
    
    // </editor-fold>
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        boolean isLookSet = false;
        
        try {            
            FlatLightLaf.setup();
            javax.swing.UIManager.setLookAndFeel( new FlatLightLaf() );
            isLookSet = true;
            
         } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
           
       if(!isLookSet) {
            try {           
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                    javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
                }
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(ToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
       }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ToolGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonClearInputs;
    private javax.swing.JButton ButtonClearOutputs;
    private javax.swing.JButton ButtonExitApplication;
    private javax.swing.JButton ButtonLoadKB;
    private javax.swing.JButton ButtonVerifyAndComputeAll;
    private javax.swing.JButton ButtonVerifyKB;
    private javax.swing.JButton ButtonVerifyQuery;
    private javax.swing.JLabel LabelHeaderDee;
    private javax.swing.JLabel LabelHeaderUct;
    private javax.swing.JPanel PanelHeader;
    private javax.swing.JPanel PanelInputs;
    private javax.swing.JPanel PanelMain;
    private javax.swing.JPanel PanelOutputBaseRanking;
    private javax.swing.JPanel PanelOutputEntailAndJustify;
    private javax.swing.JPanel PanelOutputExplanations;
    private javax.swing.JPanel PanelOutputKB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextArea textAreaInputKB;
    private javax.swing.JTextArea textAreaOutputBaseRanking;
    private javax.swing.JTextArea textAreaOutputDiscardedRanks;
    private javax.swing.JTextArea textAreaOutputEntailment;
    private javax.swing.JTextArea textAreaOutputExplanation;
    private javax.swing.JTextArea textAreaOutputJustification;
    private javax.swing.JTextArea textAreaOutputKB;
    private javax.swing.JTextField textFieldInputQuery;
    // End of variables declaration//GEN-END:variables
}
